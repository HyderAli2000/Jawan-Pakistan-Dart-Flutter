Assignment #02


QUESTION #01:

"ARITHMETIC OPERATORS"
+	Use to add two operands
â€“	Use to subtract two operands
-expr	It is Use to reverse the sign of the expression
*	Use to multiply two operands
/	Use to divide two operands
~/	Use two divide two operands but give output in integer
%	Use to give remainder of two operands

"RELATIONAL OPERATORS"
>	Check which operand is bigger and give result as boolean expression.
<	Check which operand is smaller and give result as boolean expression.
>=	Check which operand is greater or equal to each other and give result as boolean expression.
<=	Check which operand is less than or equal to each other and give result as boolean expression.
==	Check whether the operand are equal to each other or not and give result as boolean expression.
!=	Check whether the operand are not equal to each other or not and give result as boolean expression.

"TYPE TEST OPERATORS"
is	Gives boolean value true as output if the object has specific type
is!	Gives boolean value false as output if the object has specific type


"BITWISE OPERATORS"
&	Performs bitwise and operation on two operands.
|	Performs bitwise or operation on two operands.
^	Performs bitwise XOR operation on two operands.
~	Performs bitwise NOT operation on two operands.
<<	Shifts a in binary representation to b bits to left and inserting 0 from right.
>>	Shifts a in binary representation to b bits to left and inserting 0 from left.


"ASSIGNMENT OPERATORS"
=	Use to assign values to the expression or variable
??=	Assign the value only if it is null.


"LOGICAL OPERATORS"



"CONDITIONAL OPERATORS"



"CASCADE NOTATION OPERATORS"




QUESTION #02:

a.	var a = 2, b = 1; 				a=2,b=1
b.	var result = --a - --b + ++b + b--; 		result=3
Explain the output at each stage:  
c.	--a; 				  a=1 (pre-decrement)
d.	--a - --b; 			  a=1 - b=0 => 1	(pre-Idecrement with subtraction)
e.	--a - --b + ++b; 		  a=1 - b=0 => 1 + b=1 => 2(pre-decrement with addition)
f.	--a - --b + ++b + b--;	  	  a=1 - b=0 => 1 + b=1 => 2 + b=1 => 3 (post-decrement with addition)


QUESTION #03:

var ticketFare=600;
  var nTickets=5;
  print("Total price is ${ticketFare*nTickets}");


QUESTION #04:

  var list1=[1,2,3,4,5,6,7] ;
  var list2=[3,5,6,7,9,10];
  print(list1.where((e)=>!list2.contains(e)).toList());


QUESTION #05:

"??" is a simple version of if-else statement. If the condition is true than expersion1 is executed else expersion2 is executed.
And "?" for if expersion1 is non-null returns its value else returns expression2 value.

int a = 5;
    int b = 7;
 
    // Conditional Statement
    var c = (a < 10) ? "Statement is Correct" : "Statement is Wrong";
    print(c);
 
    // Conditional statement
    int n;
    var d = n ? ? "n has Null value";
    print(d);
 
    // After assigning value to n
    n = 10;
    d = n ? ? "n has Null value";
    print(d);


QUESTION #06:

"NUMBERS" Numbers in Dart are used to represent numeric literals


void main() {
   int n1 = 2;             
   double n2 = 1.5; 
   var res = n1+n2;
  print(res);
}


"Strings" Strings represent a sequence of characters


void main() {
    String fname = 'Hyder'; 
    String lname = 'Ali';   
    print (fname + lname);
}

"BOOLEANS" It represents Boolean values true and false


void main() {
  String fname = 'Hyder'; 
  String lname = 'Ali';   
  bool res = (fname==lname);
  print (res);  
}

"LIST" It is an ordered group of objects

  var abc = [4,5,6,3,2,6,8,10];
  print(abc.first);
  
  var abc1 = [4,5,6,3,2,6,8,10];
  print(abc1.last);
  
  var abc2 = [4,5,6,3,2,6,8,10];
  print(abc2.length);
  
  var abc3 = [4,5,6,3,2,6,8,10];
  print(abc3.elementAt(0));

"MAPS" It represents a set of values as key-value pairs

   var data = {'name': 'Hyder Ali','occupation': 'Web developer', 'age': '21'};
   print(data);
   print(data.keys);
   print(data.values);
  
  
map size
   var data1 = {'name': 'Hyder Ali','occupation': 'Web developer', 'age': '21'};
   print(data1.length);

QUESTION #07:

  var array1 = List.generate(10,(index)=>(index+1)*7);
  var array2 = List.generate(10,(index)=>(index+1));
  
  var table = Map.fromIterables(array2, array1);
  for(int i=0;i<10;i++){
    print("7 x ${i+1} = ${table[i+1]}");

QUESTION #08:

  var password = "hyder123";
  var inputPassword = "";
  
  if (inputPassword == null || inputPassword == "")
  {
    print("Please enter your password");
  }
  else if(inputPassword == password)
  {
    print("Correct! The password you entered matches the original password");
  }
  else
  {
    print("Incorrect password");
  }


QUESTION #09:

 var studentsName = ["Hyder","Ali","Hasan"];
  var storedScore = [90,85,89];
  studentsName.forEach((name)=>print("${name} secured ${storedScore[studentsName.indexOf(name)]} marks out of 500 and got ${(storedScore[studentsName.indexOf(name)]/500)*100} %"));



QUESTION #10:

"LEGAL VARIABLES"
  int abc = 53;
  num ab_c = 122;
  double $map = 53.2;
  String def1 = "hyder";
  bool bol1 = true;
  
"ILLEGAL VARIABLES"  
  int 1abc = 5;
  String -def = "hyder";
  double Map = 53.0;
  bool &bol = False;
  num ab-c = 12;


QUESTION #11:

  var w1 = "Hyderabad";
  print(w1);
  w1 = w1.replaceAll("Hyder", "Islam");
  print(w1);


QUESTION #12:

  var now = DateTime.now();
  if (now.day<16)
  {
    print("First fifteen days of the month");
  }
  else
  {
    print("Last days of the month");
  }
